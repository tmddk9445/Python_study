### for문 ###

# 반복해서 문장을 수행해야 할 경우

# for문의 기본구조
# for 변수 in 리스트(또는 튜플, 문자열):
#     수행할 문장1
#     수행할 문장2 ...

### 전형적인 for문 ###
test_list = ['one', 'two', 'three']
for i in test_list:
    print(i)

# one
# two
# three // 리스트의 마지막 요소까지 반복한다.

### 다양한 for문의 사용 ###

a = [(1,2), (3,4), (5,6)]
for (first, last) in a:
    print(first + last)

# 3
# 7
# 11 
# a 리스트의 요솟값이 튜플이기 때문에 각각의 요소가 자동으로 (first, last) 변수에 대입된다.

### for문의 응용 ###

# 총 5명의 학생이 시험을 보았는데 시험 점수가 60점 이상이면 합격이고 그렇지 않으면 불합격이다.
# 합격인지 불합격인지 결과를 보여 주시오.

marks = [90, 25, 67, 45, 80]
number = 0
for mark in marks:
    number = number + 1
    if mark >= 60:
        print("%d번 학생은 합격입니다." % number)
    else :
        print("%d번 학생은 불합격입니다." % number)

# 1번 학생은 합격입니다.
# 2번 학생은 불합격입니다.
# 3번 학생은 합격입니다.
# 4번 학생은 불합격입니다.
# 5번 학생은 합격입니다.

### for문과 continue ###

marks = [90, 25, 67, 45, 80]
number = 0
for mark in marks:
    number = number + 1
    if mark < 60:
        continue
    print("%d번 학생 축하합니다. 합격입니다. " % number)

# 1번 학생 축하합니다. 합격입니다.
# 3번 학생 축하합니다. 합격입니다.
# 5번 학생 축하합니다. 합격입니다.

### for문과 함께 자주 사용하는 range 함수 ###

a = range(10) 
print(a) # range(0, 10) >> 결괏값

# 0부터 10 미만의 숫자를 포함하는 range 객체를 만들어 준다.
# 끝 숫자는 포함되지 않는다.

# range 함수의 예시
add = 0
for i in range(1, 11):
    add = add + i

print(add) # 55 >> 결괏값

for number in range(len(marks)): # len함수는 리스트 안의 요소 개수를 돌려주는 함수이다. len(marks) = 5
    if marks[number] < 60: 
        continue
    print("%d번 학생 축하합니다. 합격입니다." % (number+1))

# 1번 학생 축하합니다. 합격입니다.
# 3번 학생 축하합니다. 합격입니다.
# 5번 학생 축하합니다. 합격입니다.

### for와 range를 이용한 구구단 ###

for i in range(2, 10):
    for j in range(1, 10):
        print(i*j, end=" ") 
    print('')

# 2 4 6 8 10 12 14 16 18
# 3 6 9 12 15 18 21 24 27
# 4 8 12 16 20 24 28 32 36
# 5 10 15 20 25 30 35 40 45
# 6 12 18 24 30 36 42 48 54
# 7 14 21 28 35 42 49 56 63
# 8 16 24 32 40 48 56 64 72
# 9 18 27 36 45 54 63 72 81

# end 파라미터는 해당 결괏값을 출력할 때 다음줄로 넘기지 않고 그 줄에 계속해서 출력하기 위해서이다.

# print문의 end 매개변수에는 디폴트로 줄바꿈 문자 (\n)가 세팅되어 있다.

# print('') 2단, 3단 등을 구분하기 위해 사용했다.
# 두 번째 for문이 끝나면 결괏값을 다음 줄부터 출력하게 하는 역할을 한다.

### 리스트 컴프리헨션 사용하기 ###

# 리스트 안에 for문을 포함하는 리스트 컴프리헨션을 사용해보자

a = [1,2,3,4]
result = []
for num in a :
    result.append(num*3)

print(result) # [3, 6, 9, 12] >> 결괏값
# a 리스트의 각 항목에 3을 곱한 결과를 result 리스트에 담는 예제이다.

a = [1,2,3,4]
result = [num * 3 for num in a]
print(result) # [3, 6, 9, 12] >> 결괏값

a = [1,2,3,4]
result = [num * 3 for num in a if num % 2 == 0]
print(result) # [6, 12] >> 결괏값

# 리스트 컨프리헨션의 문법구조
# [표현식 for 항목 in 반복가능객체 if 조건문]

# for문을 2개 이상 사용하는 것도 가능하다.
# [표현식 for 항목1 in 반복가능객체1 if 조건문1
#       for 항목2 in 반복가능객체2 if 조건문2
#       ...
#       for 항목n in 반복가능객체n if 조건문n]

result = [x*y for x in range(2,10)
            for y in range(1,10)]
print(result)
[2, 4, 6, 8, 10, 12, 14, 16, 18, 3, 6, 9, 12, 15, 18, 21, 24, 27, 
    4, 8, 12, 16, 20, 24, 28, 32, 36, 5, 10, 15, 20, 25, 30, 35, 40, 45, 
    6, 12, 18, 24, 30, 36, 42, 48, 54, 7, 14, 21, 28, 35, 42, 49, 56, 63,
    8, 16, 24, 32, 40, 48, 56, 64, 72, 9, 18, 27, 36, 45, 54, 63, 72, 81]












